<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.online.mapper.TestMapper">

	<!-- 학생 응시가능한 시험 목록 -->
	<select id = "selectStudentTestList"
			parameterType = "int" 
			resultType="goodee.gdj58.online.vo.Test">
			
		SELECT 
			test_no testNo
			, test_title testTitle
			, test_date testDate
		FROM test
		WHERE test_no NOT IN (SELECT t.test_no
								FROM test t
									INNER JOIN score s
									ON t.test_no = s.test_no
								WHERE s.student_no = #{studentNo})
			AND test_date = CURDATE()
		ORDER BY test_no ASC
		
	</select>	

	<!-- 시험 수정 -->
	<update id = "updateTest"
			parameterType = "goodee.gdj58.online.vo.Test">
	
		UPDATE test
		SET test_title = #{testTitle}
		WHERE test_no = #{testNo}
			
	</update>

	<!-- 시험 1개 보기(testTitle) -->
	<select id = "selectTestTitle"
			parameterType = "int"
			resultType = "goodee.gdj58.online.vo.Test">
	
		SELECT
			test_no testNo
			, test_title testTitle
		FROM test
		WHERE test_no = #{testNo}
			
	</select>

	<!-- 시험 등록 -->
	<insert id = "insertTest"
			parameterType = "goodee.gdj58.online.vo.Test">
	
		INSERT INTO test (
			test_title
			, test_date
		) VALUES (
			#{testTitle}
			, #{testDate}
		)
			
	</insert>

	<!-- 시험 한개 문제&보기 출력 -->
	<select id = "selectTestOne"
			parameterType = "java.util.Map"
			resultType = "java.util.Map">
			
		SELECT
			a.test_no testNo
			, a.test_title testTitle
			, a.test_date testDate
			, a.question_no questionNo
			, a.question_idx questionIdx
			, a.question_title questionTitle
			, MAX(if(a.example_idx = 1, a.example_no, 0)) exampleNo1
			, MAX(if(a.example_idx = 2, a.example_no, 0)) exampleNo2
			, MAX(if(a.example_idx = 3, a.example_no, 0)) exampleNo3
			, MAX(if(a.example_idx = 4, a.example_no, 0)) exampleNo4
			, MAX(if(a.example_idx = 1, a.example_title, 0)) exampleTitle1
			, MAX(if(a.example_idx = 2, a.example_title, 0)) exampleTitle2
			, MAX(if(a.example_idx = 3, a.example_title, 0)) exampleTitle3
			, MAX(if(a.example_idx = 4, a.example_title, 0)) exampleTitle4
			, MAX(if(a.example_idx = 1, a.answer, 0)) answer1
			, MAX(if(a.example_idx = 2, a.answer, 0)) answer2
			, MAX(if(a.example_idx = 3, a.answer, 0)) answer3
			, MAX(if(a.example_idx = 4, a.answer, 0)) answer4			
		FROM
			(SELECT
				t.test_no
				, t.test_title
				, t.test_date
				, q.question_no
				, q.question_idx
				, q.question_title
				, e.example_no
				, e.example_idx
				, e.example_title
				, e.answer
			FROM test t
				INNER JOIN question q
				ON t.test_no = q.test_no
				INNER JOIN example e
				ON q.question_no = e.question_no
			WHERE t.test_no = #{testNo}
			ORDER BY q.question_idx ASC, example_idx ASC) a
		GROUP BY a.question_idx		
			
	</select>

	<!-- 시험 목록 -->
	<select id = "selectTestList" 
			parameterType = "java.util.Map"
			resultType="goodee.gdj58.online.vo.Test">
			
		SELECT
			test_no testNo
			, test_title testTitle
			, test_date testDate
		FROM test
			
			
	</select>

</mapper>